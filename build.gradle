// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    repositories {

        google()
        jcenter()

        maven {
            url 'https://maven.fabric.io/public'
        }

    }

    dependencies {
        classpath(Dependencies.gradle)
        classpath(Dependencies.kotlin)
        classpath(Dependencies.navSafeArgs)
        classpath(Dependencies.junit5DeMannodermausGradlePlugin)
        classpath(Dependencies.jacoco)
        classpath(Dependencies.googleServices)
        classpath(Dependencies.fabricGradle)
        classpath(Dependencies.firebasePerformanceMonitoringPlugin)
        classpath(Dependencies.firebaseAppDistribution)
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

    
}

plugins {
    id("de.fayard.buildSrcVersions") version "0.7.0"
}

apply plugin: "android-reporting"
apply plugin: 'jacoco'

allprojects {
    repositories {
        google()
        jcenter()

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    task allDependencies(type: DependencyReportTask) {}
}


task jacocoFullProjectReport(type: JacocoReport, dependsOn: [
        "${Modules.app}:jacocoTestReport",
        "${Modules.common}:jacocoTestReport",
        "${Modules.preferences}:jacocoTestReport",
        "${Modules.repository}:jacocoTestReport",
        "${Modules.roomdb}:jacocoTestReport"
]) {
    reports {
        xml.enabled = false
        csv.enabled = false
        html.enabled = true
    }
    sourceDirectories.from = files([tasks.getByPath("${Modules.app}:jacocoTestReport").sourceDirectories,
                               tasks.getByPath("${Modules.common}:jacocoTestReport").sourceDirectories,
                               tasks.getByPath("${Modules.preferences}:jacocoTestReport").sourceDirectories,
                               tasks.getByPath("${Modules.repository}:jacocoTestReport").sourceDirectories,
                               tasks.getByPath("${Modules.roomdb}:jacocoTestReport").sourceDirectories
    ])

    classDirectories.from = files([tasks.getByPath("${Modules.app}:jacocoTestReport").classDirectories,
                              tasks.getByPath("${Modules.common}:jacocoTestReport").classDirectories,
                              tasks.getByPath("${Modules.preferences}:jacocoTestReport").classDirectories,
                              tasks.getByPath("${Modules.repository}:jacocoTestReport").classDirectories,
                              tasks.getByPath("${Modules.roomdb}:jacocoTestReport").classDirectories
    ])

    executionData.from = files([tasks.getByPath("${Modules.app}:jacocoTestReport").executionData,
                           tasks.getByPath("${Modules.common}:jacocoTestReport").executionData,
                           tasks.getByPath("${Modules.preferences}:jacocoTestReport").executionData,
                           tasks.getByPath("${Modules.repository}:jacocoTestReport").executionData,
                           tasks.getByPath("${Modules.roomdb}:jacocoTestReport").executionData
    ])

}